import mod.mar

fun desugar_array_ops(taco: Taco): Taco {
  var funs = map[String, TacoBody]()
  for fun_ in taco.funs do
    funs.&.put(fun_.key, fun_.value.map(DesugarArrayOps {}))
  Taco { funs, entry_point = taco.entry_point }
}

struct DesugarArrayOps {}
fun map(expr: TacoExpr, desugar: DesugarArrayOps): TacoExpr {
  var expr = expr.map_children(desugar)

  switch expr.op
  case generate_array(args) {
    var length = args.a.*
    var generator = args.b.*
    return both(
      if_(
        compare(length, taco_int(0)).is_less(),
        taco_crash(expr.type),
        taco_nothing,
      ),
      switch_on_ordering(
        compare(length, taco_int(0)),
        taco_unreachable(expr.type),
        array(expr.type.kind().array.unwrap(), empty_slice[TacoExpr]()),
        unchecked_generate_non_empty_array(length, generator),
      ),
    )
  }
  case array_get(args) {
    var array = args.a.*
    var index = args.b.*
    var item_type = array.type.kind().array.unwrap()
    return both(
      array,
      if_(
        compare(index, taco_int(0)).is_less(),
        taco_crash(item_type),
        if_(
          compare(index, array_len(array)).is_greater_equal(),
          taco_crash(item_type),
          unchecked_array_get(array, index),
        ),
      ),
    )
  }
  case array_set(args) {
    var array = args.a.*
    var index = args.b.*
    var item = args.c.*
    return both(
      array,
      if_(
        compare(index, taco_int(0)).is_less(),
        taco_crash(item.type),
        if_(
          compare(index, array_len(array)).is_greater_equal(),
          taco_crash(item.type),
          unchecked_array_set(array, index, item),
        ),
      ),
    )
  }
  case array_slice(args) {
    var array = args.a.*
    var start = args.b.*
    var end = args.c.*
    return if_(
      compare(start, taco_int(0)).is_less(),
      taco_crash(array.type),
      if_(
        compare(start, array_len(array)).is_greater_equal(),
        taco_crash(array.type),
        if_(
          compare(start, end).is_greater(),
          taco_crash(array.type),
          if_(
            compare(end, array_len(array)).is_greater(),
            taco_crash(array.type),
            unchecked_array_slice(array, start, end),
          ),
        ),
      ),
    )
  }
  default expr
}
