import mod.mar

fun complexity(fun_: YogurtFun): Int { fun_.body.complexity(fun_.dag) }

fun complexity(body: YogurtBody, dag: Dag[YogurtExpr]): Int {
  var complexity = 0
  for id in body.children do {
    complexity = complexity + id.complexity(dag)
  }
  complexity
}

fun complexity(id: Id, dag: Dag[YogurtExpr]): Int {
  switch dag.get(id).op
  case param unreachable()
  case int 1
  case string 1
  case struct_ 1
  case member 1
  case enum_ 1
  case switch_(switch_) {
    var complexity = 1
    for case_ in switch_.cases do
      complexity = complexity + case_.value.complexity(dag)
    complexity
  }
  case closure 1
  case get_closure 1
  case lambda 1
  case call 1
  case type 1
}
