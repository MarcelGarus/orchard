import mod.mar

struct PestoId { id: Id }

fun resolve(id: PestoId): PestoExpr { pesto_dag.get(id.id) }

fun hash[H](hasher: H, id: PestoId) { hasher.hash(id.id) }
fun ==(a: PestoId, b: PestoId): Bool { a.id == b.id }

var pesto_dag = dag[PestoExpr]().put_on_heap()

fun create(op: PestoOp, type: PestoType): PestoId {
  PestoId { id = pesto_dag.put(PestoExpr { op, type }) }
}

fun create_pesto_placeholder(): PestoId {
  create(PestoOp.int(42), PestoType.never)
}

fun update(id: PestoId, op: PestoOp, type: PestoType): PestoId {
  pesto_dag.nodes.&.set(id.id.index, PestoExpr { op, type })
  id
}
