| The Ground Byte Code  
|
| Internally, code runs in a stack-based virtual machine (VM), something like a
| mini-computer implemented in software. The VM has its own data stack and call
| stack and operates on instructions (called byte code instructions). From the
| point of view of the VM, Plum types no longer exist. Instead, the instructions
| operate on memory directly, reading from and writing to addresses.
|
| The byte code that Plum compiles to is called Ground, also created by me. This
| repository contains the specification of the byte code â€“ feel free to write
| your own intepreter to run Plum programs.

import ../plum.mar
import run.mar

struct Ground { bytes: Slice[Byte] }

fun write[W](writer: W, ground: Ground) {
  writer."Ground:"
  for byte in ground.bytes do writer." {byte.radix(16)}"
}
