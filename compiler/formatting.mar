import plum.mar

struct Indentation { amount: Int }

var no_indentation = indentation(0)

fun indentation(amount: Int): _ { Indentation { amount } }
fun +(indentation: Indentation, extra: Int): _ { indentation(indentation.amount + extra) }
fun write[W](writer: W, indentation: Indentation) {
  writer."{ansi_escape}[37;1m"
  for i in 0..indentation.amount do writer."| "
  writer."{ansi_escape}[0m"
}

struct FormatWithoutWhitespace[T] { value: T }

fun without_whitespace[T](value: T): _ { FormatWithoutWhitespace { value } }

var colored = true

var ansi_escape = AnsiEscape {}
struct AnsiEscape {}
fun write[W](writer: W, ansi_escape: AnsiEscape) {
  writer.write_byte(27.lower_byte())
}

var style_of_id = "32;1"
var style_of_op = "35;1"
var style_of_type = "36"

fun styled(content: String, style: String): String {
  "{ansi_escape}[{style}m{content}{ansi_escape}[0m"
}

fun pretty(id: Id): String { id.format().styled(style_of_id) }
fun pretty_op(op: String): String { op.styled(style_of_op) }
fun pretty(type: EggType): String { type.format().styled(style_of_type) }
fun pretty_signature(signature: String): String { signature.styled("31") }
fun pretty_signature_def(signature: String): String { signature.styled("31;1") }
