import
  "...core"
    Int, String, List t, list t, push (List t) t, == Int Int, + Int Int,
    empty_int_map v: Type, put (Map k v) k v, Type, Map k v, iterate (List t),
    join (Iterator String), Iterator t, generate_array Int (\ Int -> t),
    iterate (Array t), Array t, is_empty (Array t), get (Array t) Int,
    length (Array t), to t t, slice (Array t) (Range Int), Range t,
    + String String, next (Iterator t), as t t: Type, call (\ -> t),
    get (Map k v) k

Blub = \ -> (| foo bar)

main a: Int -> String =
  empty_int_map String
  .put 3 "Hi"
  .get 3
