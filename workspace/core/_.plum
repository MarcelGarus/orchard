# Welcome to Plum!  

import
  ".bool" Bool not equals and or xor implies format
  ".int"
    Int + - * / mod and or xor shift_left shift_right pow negate abs compare < >
    round_up_to_multiple_of round_up_to_power_of sqrt log_two equals format
  ".list" List list len is_empty get_maybe get map sum
  ".maybe" Maybe unwrap
  ".never" crash
  ".nothing" Nothing format equals ignore
  ".ordering" Ordering flip
  ".result" Result unwrap
  ".string" String +
  ".type" Type TypeInfo Field Variant type_of type_info
export
  Bool not equals and or xor implies format Int + - * / mod and or xor
  shift_left shift_right pow negate abs compare < > round_up_to_multiple_of
  round_up_to_power_of sqrt log_two equals format List list len is_empty
  get_maybe get map sum Maybe unwrap crash Nothing format equals ignore Ordering
  flip Result unwrap String + Type TypeInfo Field Variant type_of type_info
