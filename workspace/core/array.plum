import
  "builtins"
    Array t
    filled_array size: Int fill: t
    array_get (Array t) Int
    array_set (Array t) Int t
    array_slice (Array t) (Range Int)
    array_len (Array t)
  "..bool" Bool
  "..int" Int, == Int Int, + Int Int
  "..range" Range t, to t t, len (Range Int), is_empty (Range Int)
  "..test" assert Bool
export
  Array t
  filled_array size: Int fill: t
  get (Array t) Int
  set (Array t) Int t
  slice (Array t) (Range Int)

get array: (Array t) index: Int -> t = array .array_get index

set array: (Array t) index: Int item: t -> (Array t) =
  array .array_set index item

slice array: (Array t) range: (Range Int) -> (Array t) =
  array .array_slice range

len array: (Array t) -> Int = array .array_len

copy destination: (Array t) source: (Array t) range: (Range Int) -> (Array t) =
  # Copies to source items into the destination array at the range.
  assert (source.len .== (range.len))
  range.is_empty
  % true -> destination
    false ->
      copy
        destination .set (range.start) (source .get 0)
        source .slice (1 .to (source.len))
        range.start .+ 1 .to (range.end)
