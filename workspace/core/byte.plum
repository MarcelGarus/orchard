# Byte  
# A value from 0 to 255. All arithmetic operations wrap around. TODO: do they?

# add a: Byte b: Byte -> Byte = builtin_add_bytes a b
# sub a: Byte b: Byte -> Byte = builtin_sub_bytes a b
# mul a: Byte b: Byte -> Byte = builtin_mul_bytes a b
# / a: Byte b: Byte -> Byte = builtin_/_bytes a b
# mod a: Byte b: Byte -> Byte = builtin_mod_bytes a b
# and a: Byte b: Byte -> Byte = builtin_and_bytes a b
# or a: Byte b: Byte -> Byte = builtin_or_bytes a b
# xor a: Byte b: Byte -> Byte = builtin_xor_bytes a b
# compare a: Byte b: Byte -> Ordering = builtin_compare_bytes a b
# to_int byte: Byte -> Int = builtin_byte_to_int byte
# equals a: Byte b: Byte -> Bool =
#   compare a b
#   % less: False
#     equal: True
#     greater: False

# fun hash(hasher: &Hasher, byte: Byte)  { hasher.hash(byte.to_int()) }
# fun copy(byte: Byte) { byte }

#fun write[W](writer: W, int: Byte) { writer.write(radix(int, 10)) }
#fun radix(int: Byte, radix: Int): RadixFormat { radix(int.to_int(), radix) }
#fun digit_to_char(digit: Byte): Char {
#  if digit.to_int() > 9
#  then {digit - 10.lower_byte() + #a.byte}.to_char()
#  else {digit + #0.byte}.to_char()
#}
#fun write_debug[W](writer: W, byte: Byte) { writer."{byte}" }
