# Byte  
# A value from 0 to 255. All arithmetic operations wrap around. TODO: do they?

import
  "builtins" Byte, lower_byte Int, byte_to_int Byte
  "..bool" Bool, and Bool Bool
  "..int" Int, format Int, == Int Int, >= Int Int, < Int Int
  "..string" String
  "..test" assert Bool
export lower_byte Int, to_int Byte

to_int byte: Byte -> Int = byte.byte_to_int

to_byte int: Int -> Byte =
  assert ((int .>= 0) .and (int .< 256))
  int.lower_byte

format byte: Byte -> String = byte.to_int.format

== a: Byte b: Byte -> Bool = a.to_int .== (b.to_int)
