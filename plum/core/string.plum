# Strings  

import
  "..array"
    Array t, concat (Array t) (Array t), == (Array Byte) (Array Byte),
    starts_with (Array Byte) (Array Byte), length (Array t),
    slice (Array t) (Range Int)
  "..bool" Bool
  "..byte" Byte
  "..int" Int
  "..range" Range t

export String

String = & utf8_bytes: (Array Byte)

+ a: String b: String -> String =
  & utf8_bytes: (concat (a.utf8_bytes) (b.utf8_bytes))

== a: String b: String -> Bool = a.utf8_bytes .== (b.utf8_bytes)

length string: String -> Int = string.utf8_bytes.length

substring string: String range: (Range Int) -> String =
  & utf8_bytes: (string.utf8_bytes .slice range)

starts_with string: String prefix: String -> Bool =
  string.utf8_bytes .starts_with (prefix.utf8_bytes)
