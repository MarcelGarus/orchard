export
  Rectangle
  by Position Size -> Rectangle
  contains Rectangle Position -> Bool
  intersection Rectangle Rectangle -> Rectangle

import
  ...core
  ..matrix

Rectangle = & left: Int top: Int right: Int bottom: Int

by at: Position size: Size -> Rectangle =
  & left: at.x
    top: at.y
    right: (at.x .+ (size.width))
    bottom: (at.y .+ (size.height))

contains rect: Rectangle pos: Position -> Bool =
  and
    rect.left .to (rect.right) .contains (pos.x)
    rect.top .to (rect.bottom) .contains (pos.y)

intersection a: Rectangle b: Rectangle -> Rectangle =
  & left: max (a.left) (b.left)
    top: max (a.top) (b.top)
    right: min (a.right) (b.right)
    bottom: min (a.bottom) (b.bottom)
