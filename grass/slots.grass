# Many data structures have a similar memory layout: Rather than keeping data
# directly on the stack, they enable mutation of a single source of truth by
# allocating fields on the heap and only maintaining a pointer on the stack.
#
# ┌────────┐
# │ slots  │
# └────────┘
#     │
#     v
# ┌────────┬────────┬────────┐
# │ a      | b      | c      │
# └────────┴────────┴────────┘
#
# This file contains utility procedures for allocating such a data structure and
# for loading and storing the slots.

# ( -> slots)
@slots.make_a      push_word _8   call ^safe_malloc_word_aligned  return
@slots.make_ab     push_word _16  call ^safe_malloc_word_aligned  return
@slots.make_abc    push_word _24  call ^safe_malloc_word_aligned  return
@slots.make_abcd   push_word _32  call ^safe_malloc_word_aligned  return
@slots.make_abcde  push_word _40  call ^safe_malloc_word_aligned  return

# (slots -> )
@slots.free_a      push_word _8   free_word_aligned  return
@slots.free_ab     push_word _16  free_word_aligned  return
@slots.free_abc    push_word _24  free_word_aligned  return
@slots.free_abcd   push_word _32  free_word_aligned  return
@slots.free_abcde  push_word _40  free_word_aligned  return

# (slots -> field)
@slots.get_a                      load_word  return
@slots.get_b  push_word _8   add  load_word  return
@slots.get_c  push_word _16  add  load_word  return
@slots.get_d  push_word _24  add  load_word  return
@slots.get_e  push_word _32  add  load_word  return

# (field slots -> )
@slots.set_a                      over  store_word  pop 08  return
@slots.set_b  push_word _8   add  over  store_word  pop 08  return
@slots.set_c  push_word _16  add  over  store_word  pop 08  return
@slots.set_d  push_word _24  add  over  store_word  pop 08  return
@slots.set_e  push_word _32  add  over  store_word  pop 08  return

# (slots -> field slots)
@slots.keep_get_a  dup                      load_word  over  pop_over2 08  return
@slots.keep_get_b  dup  push_word _8   add  load_word  over  pop_over2 08  return
@slots.keep_get_c  dup  push_word _16  add  load_word  over  pop_over2 08  return
@slots.keep_get_d  dup  push_word _24  add  load_word  over  pop_over2 08  return
@slots.keep_get_e  dup  push_word _32  add  load_word  over  pop_over2 08  return

# (field slots -> slots)
@slots.keep_set_a  dup                      over2  store_word  pop_over  return
@slots.keep_set_b  dup  push_word _8   add  over2  store_word  pop_over  return
@slots.keep_set_c  dup  push_word _16  add  over2  store_word  pop_over  return
@slots.keep_set_d  dup  push_word _24  add  over2  store_word  pop_over  return
@slots.keep_set_e  dup  push_word _32  add  over2  store_word  pop_over  return
