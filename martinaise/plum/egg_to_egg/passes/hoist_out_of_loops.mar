import mod.mar

fun hoist_out_of_loops(id: EggId, builder: &EggBodyBuilder): EggId {
  var loop_ = id.resolve().loop_ or return id

  | TODO:
  | Hoist expressions indepdent of the loop variables out of the loop.
  | var hoisted = rec.body.hoist_from_body_running_at_least_once()
  | if hoisted.hoisted.is_not_empty() then {
  |   for id in hoisted.hoisted do builder.push(id)
  |   return builder.recursive(rec.initial, hoisted.body)
  | }

  id
}
