import mod.mar

| Tree shakes the body. Assumes that expressions within this body are already
| optimized. This function is shallow, only removing unnecessary locals from the
| current body (not inner bodies).
fun tree_shake(body: WaffleBody): WaffleBody {
  | We go through the body from the bottom to the top, tracking which locals are
  | used referenced later in the body. This way, when we encounter an
  | expression, we know immediately whether we can throw it away.
  var referenced_later_on = set[WaffleId]()
  body.returns.collect_referenced(referenced_later_on.&)

  var rev_locals = list[WaffleId]()
  for local in body.locals.rev_iter() do {
    var expr = local.resolve()

    if not(referenced_later_on.contains(local)) and expr.is_pure() then continue

    expr.collect_referenced(referenced_later_on.&)
    rev_locals.&.push(local)
  }
  var locals = list[WaffleId]()
  for id in rev_locals.to_slice().rev_iter() do locals.&.push(id)

  WaffleBody { locals = locals.to_slice(), returns = body.returns }
}
